<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.tanlsh.work</groupId>
  <artifactId>iblog</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>iblog Maven Webapp</name>
  <url>http://maven.apache.org</url>
	<!-- 版本配置 -->
	<properties>
		<jdk.version>1.6</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<argLine>-Dfile.encoding=UTF-8</argLine>
	</properties>
	<repositories>
	      <repository>
	          <id>maven-repo2</id>
	          <name>maven-repo2</name>
	          <layout>default</layout>
	           <url>http://repo2.maven.org/maven2/</url>  
	      </repository>
	      <repository>
	          <id>oschina Releases</id>
	          <name>oschina Releases</name>
	          <url>http://maven.oschina.net/content/groups/public</url>
	      </repository>
	  </repositories>
	  <pluginRepositories>
	      <pluginRepository>
	          <id>maven2-repo</id>
	          <name>maven2 Repository</name>
	          <url>http://repo2.maven.org/maven2/</url>
	      </pluginRepository>
	      <pluginRepository>
	          <id>oschina Releases</id>
	          <name>oschina Releases</name>
	          <url>http://maven.oschina.net/content/groups/public</url>
	      </pluginRepository>
	  </pluginRepositories>  
  <dependencies>
  <!--  -->
   <dependency>
       <groupId>com.baidu.inf.iis</groupId>
       <artifactId>bcs-sdk</artifactId>
       <version>1.4.5</version>
       <scope>system</scope>
       <systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/bcs-sdk-java_1.4.5.jar</systemPath>
   </dependency>
   <!-- ueditor 修改版 -->
    <dependency>
       <groupId>com.baidu</groupId>
       <artifactId>ueditor</artifactId>
       <version>1.1.1</version>
       <scope>system</scope>
       <systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/ueditor-1.1.1-for-qiniu-bcs.jar</systemPath>
   </dependency>
   <!-- servlet环境开始 -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>servlet-api</artifactId>
		<version>2.5</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
	    <groupId>javax.servlet.jsp</groupId>
	    <artifactId>jsp-api</artifactId>
	    <version>2.1</version>
	    <scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
		<type>jar</type>
	</dependency>
	<!-- server环境结束 -->
   <dependency>
		<groupId>com.mchange</groupId>
		<artifactId>c3p0</artifactId>
		<version>0.9.5</version>
	</dependency>
   <dependency>
		<groupId>commons-codec</groupId>
		<artifactId>commons-codec</artifactId>
		<version>1.9</version>
	</dependency>
    <dependency>
		<groupId>commons-fileupload</groupId>
		<artifactId>commons-fileupload</artifactId>
		<version>1.3.1</version>
	</dependency>
    <dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>
		<version>2.4</version>
	</dependency>
    <dependency>
		<groupId>commons-logging</groupId>
		<artifactId>commons-logging</artifactId>
		<version>1.1.1</version>
	</dependency>
    <dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache</artifactId>
		<version>2.9.0</version>
	</dependency>
	
    <dependency>
		<groupId>org.freemarker</groupId>
		<artifactId>freemarker</artifactId>
		<version>2.3.20</version>
	</dependency>
    <dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>4.3.4</version>
	</dependency>
    <dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpcore</artifactId>
		<version>4.3.2</version>
	</dependency>
	<!-- 这个版本合适吗? -->
    <dependency>
		<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpmime</artifactId>
		<version>4.1.2</version>
	</dependency>
    <dependency>
		<groupId>com.jfinal</groupId>
		<artifactId>jfinal</artifactId>
		<version>1.9</version>
	</dependency>
	<!-- 这个版本? -->
    <dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>20140107</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>1.1.2</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<version>1.1.2</version>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.23</version>
	</dependency>
	 <dependency>
	    <groupId>com.qiniu</groupId>
	    <artifactId>sdk</artifactId>
	    <version>[6.1.7, 6.999]</version>
	</dependency>
    <dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.7.7</version>
	</dependency>
   <!-- util类需要的 -->
   <dependency>
		<groupId>javax.mail</groupId>
		<artifactId>javax.mail-api</artifactId>
		<version>1.5.2</version>
	</dependency>
	<dependency>
		<groupId>org.apache.velocity</groupId>
		<artifactId>velocity</artifactId>
		<version>1.7</version>
	</dependency>
    <dependency>
		<groupId>net.lingala.zip4j</groupId>
		<artifactId>zip4j</artifactId>
		<version>1.3.2</version>
	</dependency>
   
   
  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
    	<!-- Compiler 插件, 设定JDK版本 -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.5.1</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
				<showWarnings>true</showWarnings>
				<encoding>UTF-8</encoding>  
			</configuration>
		</plugin>
		<!-- war打包插件,排除某些文件  绕了很多弯路,记录要点如下:
			简单一句话说明:
			warSourceExcludes是在编译周期进行完成后从src/main/webapp目录复制文件时忽略，
			而packagingExcludes是在复制webapp目录完成后打包时忽略target/ibaby文件夹的文件
		-->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.4</version>
			<configuration>
				<warName>${project.artifactId}</warName>
				<packagingExcludes>WEB-INF/classes/portable/**,WEB-INF/classes/_*.*</packagingExcludes>
			</configuration>
		</plugin>
          <!-- 
	      	有时候，比如mybatis的mapper.xml文件
	      	我们习惯把它和Mapper.java放一起，都在src/main/java下面
	      	这样利用maven打包时，就需要修改pom.xml文件
	      	来把mapper.xml文件一起打包进jar或者war里了
	      	否则，这些文件不会被打包的。（maven认为src/main/java只是java的源代码路径） 
      	-->
		 <plugin>  
		      <artifactId>maven-resources-plugin</artifactId>  
		      <version>2.5</version>  
		      <executions>  
		          <execution>  
		              <id>copy-xmls</id>  
		              <phase>process-sources</phase>  
		              <goals>  
		                  <goal>copy-resources</goal>  
		              </goals>  
		              <configuration>  
		                  <outputDirectory>${basedir}/target/classes</outputDirectory>  
		                  <resources>  
		                      <resource>  
		                          <directory>${basedir}/src/main/java</directory>  
		                          <includes>  
		                              <include>**/*.xml</include>  
		                          </includes>  
		                      </resource>  
		                  </resources>  
		              </configuration>  
		          </execution>  
		      </executions>  
        	</plugin>  
    </plugins>
  </build>
</project>
